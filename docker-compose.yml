services:
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager

  backend:
    image: ${DOCKER_USERNAME:-xanderbilla}/devops-backend:${IMAGE_TAG:-latest}
    ports:
      - "8500:8500"
    depends_on:
      - mongo
    environment:
      - MONGODB_URI=mongodb://mongo:27017/devopsdb
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager

  frontend:
    image: ${DOCKER_USERNAME:-xanderbilla}/devops-frontend:${IMAGE_TAG:-latest}
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://${JENKINS_HOST:-localhost}:8500
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager

networks:
  app-network:
    driver: overlay
    attachable: true

volumes:
  mongo-data:
    driver: local
